<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://fpv-fsim.dev/schemas/scene"
           xmlns:tns="http://fpv-fsim.dev/schemas/scene"
           elementFormDefault="qualified">

    <!-- Root Scene Element -->
    <xs:element name="scene" type="tns:SceneType"/>

    <!-- Scene Type Definition -->
    <xs:complexType name="SceneType">
        <xs:sequence>
            <xs:element name="metadata" type="tns:MetadataType" minOccurs="0"/>
            <xs:element name="camera" type="tns:CameraType" minOccurs="0"/>
            <xs:element name="lighting" type="tns:LightingType" minOccurs="0"/>
            <xs:element name="entities" type="tns:EntitiesType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="type" type="tns:SceneTypeEnum" use="required"/>
        <xs:attribute name="budget_memory_mb" type="xs:positiveInteger" default="1"/>
    </xs:complexType>

    <!-- Scene Type Enumeration -->
    <xs:simpleType name="SceneTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="default_sphere"/>
            <xs:enumeration value="loading_indicator"/>
            <xs:enumeration value="debug"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Metadata -->
    <xs:complexType name="MetadataType">
        <xs:sequence>
            <xs:element name="description" type="xs:string" minOccurs="0"/>
            <xs:element name="author" type="xs:string" minOccurs="0"/>
            <xs:element name="version" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Camera Configuration -->
    <xs:complexType name="CameraType">
        <xs:sequence>
            <xs:element name="position" type="tns:Vector3Type"/>
            <xs:element name="target" type="tns:Vector3Type"/>
            <xs:element name="up" type="tns:Vector3Type" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="fov" type="xs:float" default="45.0"/>
        <xs:attribute name="near_plane" type="xs:float" default="0.1"/>
        <xs:attribute name="far_plane" type="xs:float" default="1000.0"/>
    </xs:complexType>

    <!-- Lighting Configuration -->
    <xs:complexType name="LightingType">
        <xs:sequence>
            <xs:element name="directional_light" type="tns:DirectionalLightType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="ambient_light" type="tns:AmbientLightType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DirectionalLightType">
        <xs:sequence>
            <xs:element name="direction" type="tns:Vector3Type"/>
            <xs:element name="color" type="tns:ColorType"/>
        </xs:sequence>
        <xs:attribute name="intensity" type="xs:float" default="1.0"/>
        <xs:attribute name="cast_shadows" type="xs:boolean" default="false"/>
    </xs:complexType>

    <xs:complexType name="AmbientLightType">
        <xs:sequence>
            <xs:element name="color" type="tns:ColorType"/>
        </xs:sequence>
        <xs:attribute name="intensity" type="xs:float" default="0.2"/>
    </xs:complexType>

    <!-- Entities Container -->
    <xs:complexType name="EntitiesType">
        <xs:sequence>
            <xs:element name="entity" type="tns:EntityType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Entity Definition -->
    <xs:complexType name="EntityType">
        <xs:sequence>
            <xs:element name="transform" type="tns:TransformType" minOccurs="0"/>
            <xs:element name="mesh" type="tns:MeshType" minOccurs="0"/>
            <xs:element name="material" type="tns:MaterialType" minOccurs="0"/>
            <xs:element name="components" type="tns:ComponentsType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="visible" type="xs:boolean" default="true"/>
    </xs:complexType>

    <!-- Transform Component -->
    <xs:complexType name="TransformType">
        <xs:sequence>
            <xs:element name="position" type="tns:Vector3Type" minOccurs="0"/>
            <xs:element name="rotation" type="tns:Vector3Type" minOccurs="0"/>
            <xs:element name="scale" type="tns:Vector3Type" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Mesh Definition (Simplified - All Voxel Based) -->
    <xs:complexType name="MeshType">
        <xs:choice>
            <xs:element name="voxel_primitive" type="tns:VoxelPrimitiveType"/>
            <xs:element name="voxel_compound" type="tns:VoxelCompoundType"/>
        </xs:choice>
    </xs:complexType>

    <!-- Voxel Primitive (Base building block) -->
    <xs:complexType name="VoxelPrimitiveType">
        <xs:attribute name="type" type="tns:VoxelTypeEnum" use="required"/>
        <xs:attribute name="subdivisions" type="xs:positiveInteger" default="1"/>
        <xs:attribute name="size" type="xs:float" default="1.0"/>
        <xs:attribute name="radius" type="xs:float"/> <!-- For sphere-like voxels -->
    </xs:complexType>

    <!-- Voxel Compound (Multiple primitives) -->
    <xs:complexType name="VoxelCompoundType">
        <xs:sequence>
            <xs:element name="part" type="tns:VoxelPartType" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="VoxelPartType">
        <xs:sequence>
            <xs:element name="primitive" type="tns:VoxelPrimitiveType"/>
            <xs:element name="offset" type="tns:Vector3Type" minOccurs="0"/>
            <xs:element name="scale" type="tns:Vector3Type" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <!-- Voxel Types Enumeration -->
    <xs:simpleType name="VoxelTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="cube"/>
            <xs:enumeration value="sphere"/>
            <xs:enumeration value="cylinder"/>
            <xs:enumeration value="plane"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Material Definition (Simplified) -->
    <xs:complexType name="MaterialType">
        <xs:sequence>
            <xs:element name="texture" type="tns:TextureType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="parameters" type="tns:MaterialParametersType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="shader" type="tns:ShaderTypeEnum" default="basic"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="TextureType">
        <xs:choice>
            <xs:element name="procedural" type="tns:ProceduralTextureType"/>
            <xs:element name="file" type="xs:string"/>
        </xs:choice>
        <xs:attribute name="slot" type="tns:TextureSlotEnum" default="diffuse"/>
        <xs:attribute name="size" type="xs:positiveInteger" default="32"/>
    </xs:complexType>

    <xs:complexType name="ProceduralTextureType">
        <xs:attribute name="type" type="tns:TextureGenTypeEnum" use="required"/>
        <xs:attribute name="seed" type="xs:int" default="0"/>
        <xs:attribute name="noise_scale" type="xs:float" default="1.0"/>
        <xs:attribute name="color_primary" type="xs:string"/> <!-- Hex color -->
        <xs:attribute name="color_secondary" type="xs:string"/> <!-- Hex color -->
    </xs:complexType>

    <xs:simpleType name="TextureGenTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="flat_noise"/>
            <xs:enumeration value="speckle"/>
            <xs:enumeration value="dither"/>
            <xs:enumeration value="solid_color"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="TextureSlotEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="diffuse"/>
            <xs:enumeration value="normal"/>
            <xs:enumeration value="roughness"/>
            <xs:enumeration value="metallic"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ShaderTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="basic"/>
            <xs:enumeration value="cel"/>
            <xs:enumeration value="unlit"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="MaterialParametersType">
        <xs:sequence>
            <xs:element name="parameter" type="tns:ParameterType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ParameterType">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="required"/>
        <xs:attribute name="type" type="tns:ParameterTypeEnum" default="float"/>
    </xs:complexType>

    <xs:simpleType name="ParameterTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="float"/>
            <xs:enumeration value="int"/>
            <xs:enumeration value="bool"/>
            <xs:enumeration value="vector3"/>
            <xs:enumeration value="color"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Components Container -->
    <xs:complexType name="ComponentsType">
        <xs:sequence>
            <xs:element name="orbital" type="tns:OrbitalComponentType" minOccurs="0"/>
            <xs:element name="rotation" type="tns:RotationComponentType" minOccurs="0"/>
            <xs:element name="trail" type="tns:TrailComponentType" minOccurs="0"/>
            <xs:element name="spawner" type="tns:SpawnerComponentType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Component Definitions -->
    <xs:complexType name="OrbitalComponentType">
        <xs:sequence>
            <xs:element name="center" type="tns:Vector3Type"/>
            <xs:element name="axis" type="tns:Vector3Type" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="radius" type="xs:float" use="required"/>
        <xs:attribute name="speed" type="xs:float" default="1.0"/>
        <xs:attribute name="eccentricity" type="xs:float" default="0.0"/>
        <xs:attribute name="inclination" type="xs:float" default="0.0"/>
        <xs:attribute name="phase_offset" type="xs:float" default="0.0"/>
        <xs:attribute name="enable_banking" type="xs:boolean" default="false"/>
        <xs:attribute name="max_bank_angle" type="xs:float" default="30.0"/>
    </xs:complexType>

    <xs:complexType name="RotationComponentType">
        <xs:sequence>
            <xs:element name="axis" type="tns:Vector3Type"/>
        </xs:sequence>
        <xs:attribute name="speed" type="xs:float" default="1.0"/>
        <xs:attribute name="random_variation" type="xs:float" default="0.0"/>
    </xs:complexType>

    <xs:complexType name="TrailComponentType">
        <xs:attribute name="particle_count" type="xs:positiveInteger" default="50"/>
        <xs:attribute name="lifetime" type="xs:float" default="2.0"/>
        <xs:attribute name="spawn_rate" type="xs:float" default="20.0"/>
        <xs:attribute name="enable_physics" type="xs:boolean" default="true"/>
    </xs:complexType>

    <xs:complexType name="SpawnerComponentType">
        <xs:attribute name="spawn_rate" type="xs:float" default="0.1"/>
        <xs:attribute name="max_entities" type="xs:positiveInteger" default="10"/>
        <xs:attribute name="entity_lifetime" type="xs:float" default="30.0"/>
        <xs:attribute name="spawn_radius" type="xs:float" default="5.0"/>
    </xs:complexType>

    <!-- Common Types -->
    <xs:complexType name="Vector3Type">
        <xs:attribute name="x" type="xs:float" default="0.0"/>
        <xs:attribute name="y" type="xs:float" default="0.0"/>
        <xs:attribute name="z" type="xs:float" default="0.0"/>
    </xs:complexType>

    <xs:complexType name="ColorType">
        <xs:attribute name="r" type="xs:float" default="1.0"/>
        <xs:attribute name="g" type="xs:float" default="1.0"/>
        <xs:attribute name="b" type="xs:float" default="1.0"/>
        <xs:attribute name="a" type="xs:float" default="1.0"/>
    </xs:complexType>

</xs:schema>